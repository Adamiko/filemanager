"use strict";var fm=angular.module("fm",["filemanager","ui.router","ngAnimate"]);fm.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("","/dir/0"),$stateProvider.state("main",{url:"/dir/:dirId",templateUrl:"/templates/main.html",controller:"MainCtrl",resolve:{dir:["DirStructure","$stateParams",function(DirStructure,$stateParams){return DirStructure.load($stateParams.dirId)}]}}).state("main.add",{url:"/add",templateUrl:"/templates/dir_add.html",controller:"AddDirCtrl"})}]),fm.run(["$rootScope","LastState","$state",function($rootScope,lastState){$rootScope.$on("$stateChangeSuccess",function(event,to,toParams,from,fromParams){lastState.setLastState(from,fromParams)})}]),angular.module("filemanager",["ui.router"]),angular.module("filemanager").filter("fileMime",function(){return function(filesList,fileMimeTypesList){var files=[];return"undefined"==typeof fileMimeTypesList||0===fileMimeTypesList.length?filesList:(filesList.forEach(function(file){fileMimeTypesList.indexOf(file.mime)>-1&&files.push(file)}),files)}}),angular.module("filemanager").service("DirStructure",["$q","$http","DirObj","FileObj",function($q,$http,DirObj,FileObj){this.currentDir=!1,this.addFolder=function(name,callbackSuccess,callbackError){var that=this;$http.post("/api/directory/add",{dir_id:this.currentDir.id,name:name}).success(function(data){var dir=new DirObj(data);that.currentDir.dirs.push(dir),callbackSuccess&&callbackSuccess(new DirObj(data))}).error(function(data){callbackError&&callbackError(data)})},this.load=function(dirId){function setDefaultFolder(){0===parseInt(dirId,10)&&(that.currentDir=new DirObj({id:0,name:"Home"}))}var defer=$q.defer(),that=this;return this.currentDir!==!1&&parseInt(dirId,10)===this.currentDir.id?this:($http.post("/api/directory",{dir_id:dirId}).success(function(data){setDefaultFolder(),that.currentDir.id=dirId,that.currentDir.parentId=data.parent_id,that.currentDir.dirs=[],that.currentDir.files=[],data.dirs.forEach(function(dirData){that.currentDir.dirs.push(new DirObj(dirData))}),data.files.forEach(function(fileData){that.currentDir.files.push(new FileObj(fileData))}),defer.resolve(that)}),defer.promise)}}]).factory("FileObj",["FileTypes","FileIcons",function(FileTypes,FileIcons){function FileObj(data){this.image=!1,this.icon=!1,this.setData(data)}return FileObj.prototype={setData:function(data){angular.extend(this,data),this.image=FileTypes.images.indexOf(this.mime)>-1?!0:!1,this.image||(this.icon=FileIcons.getIconPath(this.src))},isImage:function(){return this.image}},FileObj}]).factory("DirObj",function(){function DirObj(data){this.dirs=[],this.files=[],this.setData(data)}return DirObj.prototype={setData:function(data){angular.extend(this,data)},getSubDir:function(id){return _.find(this.dirs,{id:id})}},DirObj}),angular.module("filemanager").service("LastState",["$state",function($state){this.state=!1,this.params={},this.setLastState=function(state,params){this.state=state,this.params=params},this.goBack=function(){this.state&&""!==this.state.name?$state.go(this.state.name,this.params):$state.go("main",{dirId:0})}}]).service("FileTypes",function(){this.images=["image/jpg","image/jpeg","image/png","image/gif","image/png"],this.audio=["audio/mpeg","audio/x-ms-wma","audio/vnd.rn-realaudio","audio/x-wav"],this.video=["video/mpeg","video/mp4","video/quicktime","video/x-ms-wmv"],this.archive=["application/zip"]}).service("FileIcons",function(){this.imagesExtensions=["aac","ai","aiff","avi","_blank","bmp","c","cpp","css","dat","dmg","doc","dotx","dwg","dxf","eps","exe","flv","gif","h","hpp","html","ics","iso","java","jpg","js","key","less","mid","mp3","mp4","mpg","odf","ods","odt","otp","ots","ott","_page","pdf","php","png","ppt","psd","py","qt","rar","rb","rtf","sass","scss","sql","tga","tgz","tiff","txt","wav","xls","xlsx","xml","yml","zip"],this.getIconPath=function(fileName){var ext=fileName.substr(_.lastIndexOf(fileName,".")+1);return this.imagesExtensions.indexOf(ext)>-1?"/data/icons/"+ext+".png":"/data/icons/_blank.png"}}),angular.module("filemanager").controller("AddDirCtrl",["$scope","$state","$timeout","LastState","DirStructure",function($scope,$state,$timeout,lastState,DirStructure){$scope.folderName="",$timeout(function(){angular.element('input[name="folder_name"]').focus()},200),$scope.goBack=function(){lastState.goBack()},$scope.addFolder=function(){""!==$scope.folderName&&DirStructure.addFolder($scope.folderName,$scope.goBack)}}]),angular.module("filemanager").controller("MainCtrl",["$scope","$state","$http","DirStructure","DirObj","FileObj","FileTypes",function($scope,$state,$http,DirStructure,DirObj,FileObj,FileTypes){$scope.parentDirId=DirStructure.currentDir.parentId,$scope.dirs=DirStructure.currentDir.dirs,$scope.files=DirStructure.currentDir.files,$scope.fileTypeFilter=!1,$scope.fileTypes=FileTypes,$scope.setFilterType=function(filterName){$scope.fileTypeFilter=filterName&&filterName!==!1&&$scope.fileTypes[filterName]?filterName:!1},$scope.showDirSection=function(){$state.go("main.add")},$scope.goToFolder=function(folderObj){$state.go("main",{dirId:folderObj.id})},$scope.goFolderUp=function(){null!==$scope.parentDirId&&$state.go("main",{dirId:$scope.parentDirId})}}]);